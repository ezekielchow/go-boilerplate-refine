definitions:
  models.Category:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.ListSuccess:
    properties:
      data: {}
      headers: {}
    type: object
  models.User:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:3050
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Go Boilerplate API
  version: "1.0"
paths:
  /categories:
    get:
      description: Listing resource for categories
      parameters:
      - description: Data queried from
        in: query
        name: _start
        required: true
        type: string
      - description: Data queried to
        in: query
        name: _end
        required: true
        type: string
      - description: Sort by field
        in: query
        name: _sort
        type: string
      - description: Sort direction
        in: query
        name: _order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - OAuth2Application: []
      tags:
      - category
    post:
      description: Create resource for category
      parameters:
      - description: Name of category
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - OAuth2Application: []
      tags:
      - category
  /categories/:id:
    delete:
      description: Delete one category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - OAuth2Application: []
      tags:
      - category
    get:
      description: Get one category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - OAuth2Application: []
      tags:
      - category
    patch:
      description: Update one category
      parameters:
      - description: Name of category
        in: body
        name: name
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - OAuth2Application: []
      tags:
      - category
  /users:
    get:
      consumes:
      - application/json
      description: get a list of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - OAuth2Application: []
      summary: get a list of users
      tags:
      - users
securityDefinitions:
  OAuth2Application:
    flow: application
    tokenUrl: https://dev-7iha82mtaab0qlu7.us.auth0.com/oauth/token
    type: oauth2
swagger: "2.0"
